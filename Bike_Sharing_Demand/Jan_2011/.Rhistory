summary(model_bike)
par(mfrow=c(2,2))
plot(model_bike)
```
```{r, echo=TRUE}
#input test data set
testjan <- read.csv("testjan.csv")
#changing variables
testjan$season <- as.factor(testjan$season)
testjan$holiday <- as.factor(testjan$holiday)
testjan$workingday <- as.factor(testjan$workingday)
testjan$hour <- as.numeric(testjan$hour)
testjan$weather <- as.numeric(testjan$weather)
#predicting count values from the model
predict_test <- predict(model,testjan)
predict_values <- cbind(testjan,ceiling(predict_test))
write.csv(predict_values,"output.csv")
```
bikejan <- read.csv("bikejan.csv")
bikejan <- read.csv("bikejan.csv")
bikejan$datetime <- as.POSIXlt(as.character(bikejan$datetime))
str(bikejan)
summary(bikejan)
x <- 1:10
y <- 990:999
```
Univariate Analysis of Categorical Variables
-----
1. Season
```{r, echo=TRUE}
table(bikejan$season)/24
```
bikejan$season <- as.factor(bikejan$season)
bikejan$holiday <- as.factor(bikejan$holiday)
bikejan$workingday <- as.factor(bikejan$workingday)
bikejan$hour <- as.numeric(bikejan$hour)
bikejan$day <- as.numeric(bikejan$day)
bikejan$weather <- as.numeric(bikejan$weather)
library(car)
library(MASS)
model <- lm(count~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, bikejan)
model <- lm(count~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour, bikejan)
vif(model)
model <- lm(count~ holiday+workingday+weather+temp+humidity+windspeed+hour, bikejan)
vif(model)
model_bike <- stepAIC(model,direction= "both")
model_bike$anova
summary(model_bike)
plot(model_bike)
testjan <- read.csv("testjan.csv")
testjan$season <- as.factor(testjan$season)
testjan$holiday <- as.factor(testjan$holiday)
testjan$workingday <- as.factor(testjan$workingday)
testjan$hour <- as.numeric(testjan$hour)
testjan$weather <- as.numeric(testjan$weather)
testjan$day <- as.numeric(testjan$day)
predict_test <- predict(model,testjan)
predict_values <- cbind(testjan,ceiling(predict_test))
write.csv(predict_values,"output.csv")
write.csv(predict_values,"output.csv")
modfit <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= bikejan, method= "rf", prox= TRUE)
predict_test <- predict(modfit,testjan)
predict_values <- cbind(testjan,ceiling(predict_test))
write.csv(predict_values,"output.csv")
---
title: "Kaggle"
author: "Gaurav Bansal"
date: "Saturday, August 23, 2014"
output:
html_document:
fig_height: 4
pdf_document: default
---
Data Fields
-----
datetime - hourly date + timestamp
season -  1 = spring, 2 = summer, 3 = fall, 4 = winter
holiday - whether the day is considered a holiday
workingday - whether the day is neither a weekend nor holiday
weather - 1: Clear, Few clouds, Partly cloudy, Partly cloudy
2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist
3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds
4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog
temp - temperature in Celsius
atemp - "feels like" temperature in Celsius
humidity - relative humidity
windspeed - wind speed
casual - number of non-registered user rentals initiated
registered - number of registered user rentals initiated
count - number of total rentals
```{r, echo=TRUE}
bikejan <- read.csv("bikejan.csv")
bikejan$datetime <- as.POSIXlt(as.character(bikejan$datetime))
str(bikejan)
summary(bikejan)
x <- 1:10
y <- 990:999
```
Univariate Analysis of Categorical Variables
-----
1. Season
```{r, echo=TRUE}
table(bikejan$season)/24
```
2. Holiday
```{r, echo=TRUE}
table(bikejan$holiday)/24
bikejan[(bikejan$holiday==1),c(15,17)]
```
3. Working Day
```{r, echo=TRUE}
table(bikejan$workingday)/24
table(bikejan$day)/24
```
4. Weather
```{r, echo=TRUE}
table(bikejan$weather)/24
table(bikejan$weather)
```
Univariate Analysis for continuous variables
-----
1. temp
```{r, echo=TRUE}
hist(bikejan$temp,xlab="temperature")
boxplot(bikejan$temp,xlab="temperature")
quantile(bikejan$temp,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
2. atemp
```{r, echo=TRUE}
hist(bikejan$atemp,xlab="feel of temperature")
boxplot(bikejan$atemp,xlab="feel of temperature")
quantile(bikejan$atemp,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
3. humidity
```{r, echo=TRUE}
hist(bikejan$humidity,xlab="humidity")
boxplot(bikejan$humidity,xlab="humidity")
quantile(bikejan$humidity,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
4. Wind Speed
```{r, echo=TRUE}
hist(bikejan$windspeed,xlab="wind speed")
boxplot(bikejan$windspeed,xlab="wind speed")
quantile(bikejan$windspeed,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
5. Count
```{r, echo=TRUE}
hist(bikejan$count,xlab="count")
boxplot(bikejan$count,xlab="count")
quantile(bikejan$count,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
Bivariate Analysis with categorical variables
----
```{r, echo=TRUE}
boxplot(count~season,bikejan,xlab="season",ylab="count")
```
```{r, echo=TRUE}
boxplot(count~holiday,bikejan,xlab="holiday",ylab="count")
```
```{r, echo=TRUE}
boxplot(count~workingday,bikejan,xlab="workingday",ylab="count")
```
```{r, echo=TRUE}
boxplot(count~weather,bikejan,xlab="weather",ylab="count")
```
Bivariate Analysis with continuous variables
----
```{r, echo=TRUE}
plot(count~temp,bikejan[order(bikejan$temp),],type="l",xlab="temp",ylab="count")
plot(count~atemp,bikejan[order(bikejan$atemp),],type="l",xlab="atemp",ylab="count")
plot(count~humidity,bikejan[order(bikejan$humidity),],type="l",xlab="humidity",ylab="count")
plot(count~windspeed,bikejan[order(bikejan$windspeed),],type="l",xlab="humidity",ylab="count")
```
Time series Analysis
----
1. Hour
```{r, echo=TRUE}
bikejan_hour <- aggregate(count~hour,bikejan,sum)
head(bikejan_hour[order(-bikejan_hour$count),],4)
plot(count~hour,bikejan_hour,type="l")
```
2. Day
```{r, echo=TRUE}
bikejan_day <- aggregate(count~day,bikejan,mean)
bikejan_day[order(-bikejan_day$count),]
plot(count~day,bikejan_day,cex.axis=0.50)
```
3. Date
```{r, echo=TRUE}
bikejan_date <- aggregate(count~date,bikejan,sum)
head(bikejan_date[order(-bikejan_date$count),])
tail(bikejan_date[order(-bikejan_date$count),])
plot(count~date,bikejan_date,type="l")
```
Correlation
---
```{r, echo=TRUE}
cor(bikejan[,-c(1,18,17,6,15,14,13,11,10)])
```
Summary of EDA
---
1. Spring season whole of january
2. 17th of January was a holiday and a Monday
3. 3 saturdays, 3 sundays and 1 Monday were holidays
4. No extreme weathers, even light rains are found only in 33 observations
5. feel of temeprature is greater than actual temp.
6. only one season throughout january
7. people rent more bikes when their are no holidays but there was only 1 day of holiday so this may not be correct metric to show
8. people rent more bikes on working days than on holidays/saturday/sundays#clearly, weather has a role to play for people to rent bike. '3' depics rainy weather hence less bikes, '1' depicts clear weather hence more bikes, '2' is misty.#more bikes are rented when temp between 5-10, humidity between 40-60 and windspeed between 8-22# more bikes are in hours 8 AM and 5,6 PM # clearly there is a dip in the values on holidays
Model
---
```{r, echo=TRUE}
#converting all categorical variables as factor variables
bikejan$season <- as.factor(bikejan$season)
bikejan$holiday <- as.factor(bikejan$holiday)
bikejan$workingday <- as.factor(bikejan$workingday)
bikejan$hour <- as.numeric(bikejan$hour)
bikejan$day <- as.numeric(bikejan$day)
#weather is taken as numeric variable, as there is a value in the prediction data set with weather=4, to predict that value we keep the weather as continuos variable
bikejan$weather <- as.numeric(bikejan$weather)
```
```{r, echo=TRUE}
#let us put all the variables in the model
library(car)
library(MASS)
model <- lm(count~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, bikejan)
#vif(model)
# using this as model, it shows an ERROR :"Error in vif.default(model) : there are aliased coefficients in the model"
#hence, i drop day from the model, as it may have a perfect multicollinearity with the workingday
model <- lm(count~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour, bikejan)
vif(model)
#VIF of temp and atemp is very high, they are collinear variables, so we drop atemp, as it has high value of VIF
model <- lm(count~ holiday+workingday+weather+temp+humidity+windspeed+hour, bikejan)
vif(model)
#The VIF of all variable is less than 2, hence we consider al the variables for the model, let us ty to have the best fit using stepwise regression model
model_bike <- stepAIC(model,direction= "both")
model_bike$anova
#using stepwise regression it has dropped the 'holiday' variable. When cheked with the initial model, holiday wasn't significant
summary(model_bike)
par(mfrow=c(2,2))
plot(model_bike)
```
```{r, echo=TRUE}
#input test data set
testjan <- read.csv("testjan.csv")
#changing variables
testjan$season <- as.factor(testjan$season)
testjan$holiday <- as.factor(testjan$holiday)
testjan$workingday <- as.factor(testjan$workingday)
testjan$hour <- as.numeric(testjan$hour)
testjan$weather <- as.numeric(testjan$weather)
testjan$day <- as.numeric(testjan$day)
#predicting count values from the model
predict_test <- predict(model,testjan)
predict_values <- cbind(testjan,ceiling(predict_test))
write.csv(predict_values,"output.csv")
```
```{r, echo=TRUE}
modfit <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= bikejan, method= "rf", prox= TRUE)
predict_test_rf <- predict(modfit,testjan)
predict_values_rf <- cbind(testjan,ceiling(predict_test_rf))
write.csv(predict_values_rf,"output_rf.csv")
```
bikejan <- read.csv("bikejan.csv")
bikejan$datetime <- as.POSIXlt(as.character(bikejan$datetime))
str(bikejan)
summary(bikejan)
x <- 1:10
y <- 990:999
```
Univariate Analysis of Categorical Variables
-----
1. Season
```{r, echo=TRUE}
table(bikejan$season)/24
```
2. Holiday
```{r, echo=TRUE}
table(bikejan$holiday)/24
bikejan[(bikejan$holiday==1),c(15,17)]
```
3. Working Day
```{r, echo=TRUE}
table(bikejan$workingday)/24
table(bikejan$day)/24
```
4. Weather
```{r, echo=TRUE}
table(bikejan$weather)/24
table(bikejan$weather)
```
Univariate Analysis for continuous variables
-----
1. temp
```{r, echo=TRUE}
hist(bikejan$temp,xlab="temperature")
boxplot(bikejan$temp,xlab="temperature")
quantile(bikejan$temp,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
2. atemp
```{r, echo=TRUE}
hist(bikejan$atemp,xlab="feel of temperature")
boxplot(bikejan$atemp,xlab="feel of temperature")
quantile(bikejan$atemp,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
3. humidity
```{r, echo=TRUE}
hist(bikejan$humidity,xlab="humidity")
boxplot(bikejan$humidity,xlab="humidity")
quantile(bikejan$humidity,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
4. Wind Speed
```{r, echo=TRUE}
hist(bikejan$windspeed,xlab="wind speed")
boxplot(bikejan$windspeed,xlab="wind speed")
quantile(bikejan$windspeed,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
5. Count
```{r, echo=TRUE}
hist(bikejan$count,xlab="count")
boxplot(bikejan$count,xlab="count")
quantile(bikejan$count,c(x/1000,0.05,0.1,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.75,0.8,0.9,0.95,0.96,0.97,0.98,0.99,y/1000))
```
Bivariate Analysis with categorical variables
----
```{r, echo=TRUE}
boxplot(count~season,bikejan,xlab="season",ylab="count")
```
```{r, echo=TRUE}
boxplot(count~holiday,bikejan,xlab="holiday",ylab="count")
```
```{r, echo=TRUE}
boxplot(count~workingday,bikejan,xlab="workingday",ylab="count")
```
```{r, echo=TRUE}
boxplot(count~weather,bikejan,xlab="weather",ylab="count")
```
Bivariate Analysis with continuous variables
----
```{r, echo=TRUE}
plot(count~temp,bikejan[order(bikejan$temp),],type="l",xlab="temp",ylab="count")
plot(count~atemp,bikejan[order(bikejan$atemp),],type="l",xlab="atemp",ylab="count")
plot(count~humidity,bikejan[order(bikejan$humidity),],type="l",xlab="humidity",ylab="count")
plot(count~windspeed,bikejan[order(bikejan$windspeed),],type="l",xlab="humidity",ylab="count")
```
Time series Analysis
----
1. Hour
```{r, echo=TRUE}
bikejan_hour <- aggregate(count~hour,bikejan,sum)
head(bikejan_hour[order(-bikejan_hour$count),],4)
plot(count~hour,bikejan_hour,type="l")
```
2. Day
```{r, echo=TRUE}
bikejan_day <- aggregate(count~day,bikejan,mean)
bikejan_day[order(-bikejan_day$count),]
plot(count~day,bikejan_day,cex.axis=0.50)
```
3. Date
```{r, echo=TRUE}
bikejan_date <- aggregate(count~date,bikejan,sum)
head(bikejan_date[order(-bikejan_date$count),])
tail(bikejan_date[order(-bikejan_date$count),])
plot(count~date,bikejan_date,type="l")
```
Correlation
---
```{r, echo=TRUE}
cor(bikejan[,-c(1,18,17,6,15,14,13,11,10)])
```
Summary of EDA
---
1. Spring season whole of january
2. 17th of January was a holiday and a Monday
4. No extreme weathers, even light rains are found only in 33 observations
5. feel of temeprature is greater than actual temp.
7. people rent more bikes when their are no holidays but there was only 1 day of holiday so this may not be correct metric to show
8. people rent more bikes on working days than on holidays/saturday/sundays#clearly, weather has a role to play for people to rent bike. '3' depics rainy weather hence less bikes, '1' depicts clear weather hence more bikes, '2' is misty.#more bikes are rented when temp between 5-10, humidity between 40-60 and windspeed between 8-22# more bikes are in hours 8 AM and 5,6 PM # clearly there is a dip in the values on holidays
#converting all categorical variables as factor variables
```{r, echo=TRUE}
---
3. 3 saturdays, 3 sundays and 1 Monday were holidays
Model
6. only one season throughout january
bikejan$season <- as.factor(bikejan$season)
bikejan$holiday <- as.factor(bikejan$holiday)
bikejan$workingday <- as.factor(bikejan$workingday)
bikejan$hour <- as.numeric(bikejan$hour)
bikejan$day <- as.numeric(bikejan$day)
#weather is taken as numeric variable, as there is a value in the prediction data set with weather=4, to predict that value we keep the weather as continuos variable
bikejan$weather <- as.numeric(bikejan$weather)
```
```{r, echo=TRUE}
#let us put all the variables in the model
library(car)
library(MASS)
model <- lm(count~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, bikejan)
#vif(model)
# using this as model, it shows an ERROR :"Error in vif.default(model) : there are aliased coefficients in the model"
#hence, i drop day from the model, as it may have a perfect multicollinearity with the workingday
model <- lm(count~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour, bikejan)
vif(model)
#VIF of temp and atemp is very high, they are collinear variables, so we drop atemp, as it has high value of VIF
model <- lm(count~ holiday+workingday+weather+temp+humidity+windspeed+hour, bikejan)
vif(model)
#The VIF of all variable is less than 2, hence we consider al the variables for the model, let us ty to have the best fit using stepwise regression model
model_bike <- stepAIC(model,direction= "both")
model_bike$anova
#using stepwise regression it has dropped the 'holiday' variable. When cheked with the initial model, holiday wasn't significant
summary(model_bike)
par(mfrow=c(2,2))
plot(model_bike)
```
#input test data set
testjan <- read.csv("testjan.csv")
```{r, echo=TRUE}
#changing variables
testjan$season <- as.factor(testjan$season)
testjan$weather <- as.numeric(testjan$weather)
testjan$day <- as.numeric(testjan$day)
#predicting count values from the model
predict_test <- predict(model,testjan)
```
```{r, echo=TRUE}
predict_test_rf <- predict(modfit,testjan)
```
testjan$hour <- as.numeric(testjan$hour)
modfit <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= bikejan, method= "rf", prox= TRUE)
testjan$workingday <- as.factor(testjan$workingday)
write.csv(predict_values,"output.csv")
predict_values <- cbind(testjan,ceiling(predict_test))
write.csv(predict_values_rf,"output_rf.csv")
predict_values_rf <- cbind(testjan,ceiling(predict_test_rf))
testjan$holiday <- as.factor(testjan$holiday)
library(caret)
createDataPartition(bikejan,times=1,p=.8)
createDataPartition(bikejan$count,times=1,p=.8)
intrain <- createDataPartition(bikejan$count,times=1,p=.8)
trainjan <- bikejan[intrain,]
testjan <- bikejan[-intrain,]
intrain <- createDataPartition(bikejan$count,times=1,p=.8, list=FALSE)
trainjan <- bikejan[intrain,]
testjan <- bikejan[-intrain,]
library(car)
library(MASS)
model <- lm(count~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, trainjan)
vif(model)
model <- lm(count~ holiday+workingday+weather+temp+humidity+windspeed+hour+day, trainjan)
vif(model)
model_bike <- stepAIC(model,direction= "both")
model_bike$anova
summary(model_bike)
par(mfrow=c(2,2))
plot(model_bike)
testjan$season <- as.factor(testjan$season)
testjan$holiday <- as.factor(testjan$holiday)
testjan$workingday <- as.factor(testjan$workingday)
testjan$hour <- as.numeric(testjan$hour)
testjan$weather <- as.numeric(testjan$weather)
testjan$day <- as.numeric(testjan$day)
predict_test_lm <- predict(model,testjan)
mape <- function(y,yhat)
{sum(abs((y-yhat)/yhat))}
mape (count,predict_test_lm)
mape (testjan$count,predict_test_lm)
modfit <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= testjan, method= "rpart", prox= TRUE)
predict_test_tree <- predict(modfit,testjan)
mape (testjan$count,predict_test_tree)
modfit <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= testjan, method= "rf", prox= TRUE)
predict_test_rf <- predict(modfit,testjan)
mape (testjan$count,predict_test_rf)
predict_test_tree
predict_test_lm <- cieling(predict(model,testjan))
predict_test_lm <- ceiling(predict(model,testjan))
predict_test_tree <- ceiliing(predict(modfit,testjan))
predict_test_tree <- ceiling(predict(modfit,testjan))
predict_test_rf <- ceiling(predict(modfit,testjan))
mape (testjan$count,predict_test_lm)
mape (testjan$count,predict_test_tree)
mape (testjan$count,predict_test_rf)
predict_test_tree
predict_test_rf
plot(modfit)
modfit
modfit_tree <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= testjan, method= "rpart", prox= TRUE)
modfit_tree
modfit_tree <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= trainjan, method= "rpart", prox= TRUE)
modfit_tree
modfit <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= trainjan, method= "rpart", prox= TRUE)
modfit <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= testjan, method= "rf", prox= TRUE)
modfit <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= trainjan, method= "rpart")
modfit_tree
modfit
plot(modfit)
modfit_tree <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= trainjan, method= "rpart")
modfit_tree
plot(modfit_tree)
predict_test_tree <- ceiling(predict(modfit_tree,testjan))
mape (testjan$count,predict_test_tree)
predict_test_tree
modfit_tree$finalModel
plot(modfit_tree$finalModel)
test(modfit_tree$finalModel)
text(modfit_tree$finalModel)
plot(modfit_tree)
plot(modfit_rf)
modfit_rf
modfit_rf
modfit_rf <- train(count ~ holiday+workingday+weather+temp+atemp+humidity+windspeed+hour+day, data= testjan, method= "rf", prox= TRUE)
plot(modfit_rf)
modfit_rf
